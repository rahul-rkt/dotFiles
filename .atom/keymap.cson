# Your keymap
#
# Atom keymaps work similarly to style sheets. Just as style sheets use
# selectors to apply styles to elements, Atom keymaps use selectors to associate
# keystrokes with events in specific contexts.
#
# You can create a new keybinding in this file by typing "key" and then hitting
# tab.
#
# Here's an example taken from Atom's built-in keymap:
#
# 'atom-text-editor':
#   'enter': 'editor:newline'
#
# 'atom-workspace':
#   'ctrl-shift-p': 'core:move-up'
#   'ctrl-p': 'core:move-down'
#
# You can find more information about keymaps in these guides:
# * https://atom.io/docs/latest/using-atom-basic-customization#customizing-key-bindings
# * https://atom.io/docs/latest/behind-atom-keymaps-in-depth
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it here:
# https://github.com/bevry/cson#what-is-cson

'.platform-darwin':
  'ctrl-cmd-p': 'unset!'
  'alt-shift-p': 'project-manager:toggle'
  'cmd-\\': 'unset!'
  'cmd-`': 'unset!'
  'ctrl-`': 'unset!'
  'ctrl-`': 'tree-view:toggle'
  'cmd-t': 'unset!'
  'ctrl-o': 'fuzzy-finder:toggle-file-finder'

'body':
  'cmd-n': 'unset!'

'.platform-darwin atom-workspace':
  'alt-cmd-o': 'unset!'
  'cmd-n': 'advanced-open-file:toggle'

'.platform-darwin atom-text-editor':
  'ctrl-shift-L': 'unset!'
  'cmd-t': 'grammar-selector:show'

'body':
  'ctrl-tab': 'unset!'
  'ctrl-]': 'unset!'
  'ctrl-shift-tab': 'unset!'
  'ctrl-[': 'unset!'

  'ctrl-]': 'pane:show-next-item'
  'ctrl-[': 'pane:show-previous-item'

'body':
  'cmd-k cmd-left': 'unset!'
  'cmd-k cmd-up': 'unset!'
  'cmd-k cmd-right': 'unset!'
  'cmd-k cmd-down': 'unset!'

  'cmd-l left': 'unset!'
  'cmd-l up': 'unset!'
  'cmd-l right': 'unset!'
  'cmd-l down': 'unset!'

  'cmd-l left': 'window:focus-pane-on-left'
  'cmd-l up': 'window:focus-pane-above'
  'cmd-l right': 'window:focus-pane-on-right'
  'cmd-l down': 'window:focus-pane-below'
